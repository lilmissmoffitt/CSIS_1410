package labCollection;

import java.awt.Color;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashSet;
import java.util.List;
import java.util.Set;


public class CouchApp {
	public static Color[] colors;
	
	public static void main(String[] args) {
		colors = new Color[] {Color.BLACK, Color.BLUE,
			 Color.DARK_GRAY, Color.GRAY, Color.GREEN,
			 Color.LIGHT_GRAY, Color.RED, Color.WHITE};
		
		List<Couch> couches = new ArrayList<>();
			for (Color c : colors) {
				
			}
			printCouches(couches);
			
		List<Couch> favorites = new ArrayList<>();
			Couch fav1 = new Couch(Color.RED, Material.FABRIC);
			Couch fav2 = new Couch(Color.BLACK, Material.LEATHER);
			Couch fav3 = new Couch(Color.WHITE, Material.VINYL);
			favorites.add(fav1);
			favorites.add(fav2);
			favorites.add(fav3);
			
		countCouches(couches);
		checkFavorites();
		
		//remove vinyl couches
		System.out.println("\nRemoving all vinyl couches...\n");
		couches.removeIf(el -> el.getMaterial() == Material.VINYL);
		
		printCouches(couches);
		countCouches(couches);
		checkFavorites();
		
		//add all favorites
		System.out.println("\nAdding all the favorites to the list of couches...\n");
		couches.addAll(favorites);
		//remove duplicates
		Set<Couch> uniqueCouches = new HashSet<>(couches);
		printCouches(uniqueCouches);
		countCouches(uniqueCouches);
		checkFavorites();
	}

	private static void checkFavorites() {
		//Check to see if favorites are in the list
		//if they are
		System.out.println("All favorites are in the list.");
		//if not
		System.out.println("Not all favorites are in the list.");
	}

	private static void printCouches(Collection<Couch> couches) {
		couches.forEach(el -> System.out.print(el));
		System.out.printf("Number of elements in list couches: %d%n", couches.size());
		
		if (couches.containsAll(favorites)) {
			System.out.println("All favorites are in the list.");
		}
		else {
			System.out.prinlnt("Not all favorites are in the list.")
		}
	}
	
	
}
