package collections;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

/**
 * Contains 3 methods that will perform different
 * functions using GenericCollections.
 * 
 * @author melissamoffitt
 *
 */
public class GenericCollections {
	
	/**
	 * Creates a new list based on outlined rules
	 * @param list
	 * @return
	 */
	public static List<String> lettersAndNumbers(List<Character> list){
		List<String > strList = new ArrayList<>();
		
		//Empty lists return empty strings
		if (list.isEmpty() == true) {
			return strList;
		}
		
		//Ignore chars that are neither letters or numbers 
		for(int i = 0; i < list.size(); i++) {
			if(Character.isDigit(list.get(i))) {
				strList.add("N(" + list.get(i).toString() + ")");
			}
		}
		//chars are converted to strings
		
		//List is in reverse order
		
		//lowercase letters are appended a L()
		
		//uppercase letters are appended a U() and
		//are lowercase
		
		//Each number is represented as N()
		
		//Null should return null
				if(list.contains(null)){
					return null;
				}
		return strList;
	}
	
	/**
	 * changes the list by applying a number of changes
	 * based on set of rules
	 * @param list
	 * @return
	 */
	public static int modify(List<Integer> list) {
		//if list is null, throw NullPointerException and message
		
		//Delete all multiples of 3
		
		//Add the first 5 multiples of 4,5, and 6
		
		//Sort in ascending order
		
		//Create set to remove duplicates
		return 5;
	}
	
	/**
	 * Removes every nth element
	 * @param list
	 * @param n
	 */
	public static void removeEveryNthElement(List<?> list, int n) {
		//n <= 0 IllegalArgumentException is thrown with message
		if (n <= 0) {
			throw new IllegalArgumentException("n must be positive");
		}
		//if null NullPointerException is thrown with message
		
		//Remove object of specific position
		
	}

	

}
